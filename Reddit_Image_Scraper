#!/usr/bin/env perl

#   Reddit Image Scraper: A perl script to download images hosted on 
#   the imgur.com hosting service linked from a subreddit at reddit.com
#   Copyright (C) 2011 Joshua Hull

#   This program is free software: you can redistribute it and/or modify 
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.

use strict;
use warnings;
use JSON;
use WWW::Mechanize;

die "Usage: $0 subreddit [...]\n" unless @ARGV;

my $mech = WWW::Mechanize->new(autocheck=>0);

foreach my $arg (@ARGV) {

    # Create the directory if necessary.
    mkdir $arg unless -d $arg;

    my $url = "http://www.reddit.com/r/$arg/.json?limit=1000";
    print "Downloading from http://www.reddit.com/r/$arg\n";
    $mech->get($url);

    my $json_text = JSON->new->allow_nonref->utf8->relaxed->decode($mech->text);
    my $posts = $json_text->{data}->{children}; 
    foreach my $post (@{$posts}) {
        my $url = $post->{data}->{url};
        download_image($url, $arg) if $url =~ m@imgur.com/[^\.]+\.@i;
        scrape_album($url, $arg) if $url =~ m@imgur.com/(?:a/)?[^\.]+$@i;
	}
}

sub download_image {
    my ( $url, $arg ) = @_;
    my ($file_name) = ($url =~ m@imgur\.com/(?:a/)?(.+)$@i);
    ( -e "$arg/$file_name" )
      ? print "     Skipping $url (copy found)\n"
      : print "     Downloading $url as $file_name\n";
    $mech->get( $url, ':content_file' => "$arg/$file_name" ) || return;
    print "      Done.\n";
}

sub scrape_album {
    my ( $url, $arg ) = @_;
    print "     Found album $url\n";

    $mech->get($url);
    if ( my ($json) = ( $mech->content =~ m@images:\s+(.+?),\s*cover:@is ) ) {
        my $struct = JSON->new->allow_nonref->utf8->relaxed->decode($json);
        map {
            download_image( 'http://imgur.com/' . $_->{hash} . $_->{ext}, $arg )
        } @{ $struct->{items} };
    }
    else {    #otherwise, we've just found a page like http://imgur.com/aOLy2
        my ($img) = ($url =~ m@imgur\.com/([^\.#]+)@i);
        return unless $img;
        $mech->follow_link( url_regex => qr/$img/i );
        download_image( $mech->uri, $arg );
    }
}
